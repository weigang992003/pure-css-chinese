{{setTitle         "栅格"}}
{{setSubTitle      "完全自定义的响应式栅格系统"}}
{{setActiveNav     "grids"}}
{{setIncludePureGR true}}

{{addLocalCSS "/css/grids.css"}}
{{!addLocalJS  "/js/grids.js"}}

{{> header}}

<div class="content">
    {{sectionHeading "Pure栅格系统简介"}}

    <p>
        Pure栅格系统使用简单且功能强悍。几个简单的概念需要知道：
    </p>

    <dl>
        <dt>栅格class 与 单元格class</dt>
        <dd>
            Pure栅格系统有两种class组成：栅格 class ({{code "pure-g"}}) 和 单元格 class ({{code "pure-u"}} 或 {{code "pure-u-*"}})。栅格类似Excel的表格，由单元格组成。
        </dd>

        <dt>单元格的宽度是分数</dt>
        <dd>
            单元格用不同的class名表示宽度。比如 {{code "pure-u-1-2"}} 表示宽1/2即50%， 同样 {{code "pure-u-1-5"}} 表示宽1/5即20%。
        </dd>

        <dt>栅格的所有子元素必须是单元格</dt>
        <dd>
            栅格，即class名包含{{code "pure-g"}}的元素，它的子元素必须是单元格，即class名包含 {{code "pure-u"}} 或 {{code "pure-u-*"}}的元素。
        </dd>

        <dt>内容在单元格中<dt>
        <dd>
           所有需要显示的内容都要放在单元格中。这样才能保证内容正确的显示。
        </dd>
    </dl>

    <aside>
        <p>
            在你的项目中设置{{code "font-family"}}的时候，请查看<a href="#using-grids-with-custom-fonts">自定义栅格的font-family</a>.
        </p>
    </aside>

    <p>
        看一个简单的栅格包含3列:
    </p>

  {{#code}}
    {{> grids/intro}}
  {{/code}}


    {{sectionHeading "栅格单元格大小"}}

    <p>
        Pure栅格默认支持<b>5列</b>和<b>24列</b>。下图列出了可以替换单元格class名<b>{{code "pure-u-*"}}</b>中{{code "*"}}的分数。比如用{{code "1-2"}}替换{{code "*"}}，class名就是{{code "pure-u-1-2"}}，表示宽1/2，即50%。
    </p>

    <h3>基于5列的单元格</h3>

  {{#each pure.gridunits.n5}}
    {{> grids/grids-unit}}
  {{/each}}

    <h3>基于24列的单元格</h3>

  {{#each pure.gridunits.n24}}
    {{> grids/grids-unit}}
  {{/each}}

    <h3>自定义单元格大小</h3>

    <p>
        我们正在开发可自定义Pure栅格的工具。现在可用的是一个较低级的工具：<b><a href="https://github.com/ericf/rework-pure-grids">重新生产栅格插件</a></b>，我们用它生成Pure的内建单元格的大小。
    </p>


    {{sectionHeading "Pure的响应式栅格"}}

    <p>
        Pure同时提供一个移动设备优先的响应式的栅格系统，通过添加class名即可使用。它是一个强大并灵活的系统，基于默认的栅格系统。
    </p>

    <h3>在页面中引用</h3>

    <p>
        因为媒体查询不能被覆盖，所以我们<u>没有</u>在{{code "pure.css"}}中直接引用栅格系统。你需要引入单独的CSS文件。把下面的{{code "<link>"}} 引入页面即可。
    </p>

  {{#code}}
    {{> grids/combo}}
  {{/code}}

    <p>
        尽管Pure栅格系统设计为移动设备优先，但是你可能也希望用户使用IE8或更旧的IE版本也能正常浏览。那么判断用户浏览器后引入这个文件即可{{code "grids-responsive-old-ie.css"}}。
    </p>

    <h3>非响应式 vs. 响应式</h3>

    <p>
        通过例子看下两者的区别。下面代码是一组非响应式的栅格，在任何屏幕上宽度都是{{code "width: 33.33%"}}。
    </p>

  {{#code}}
    {{> grids/compare-nr}}
  {{/code}}

    <p>
        下面是一组响应式栅格，元素在小屏幕上宽{{code "width: 100%"}}，在中等屏幕变为{{code "width: 33.33%"}}。
    </p>

  {{#code}}
    {{> grids/compare-r}}
  {{/code}}

    <h3>默认的媒体查询</h3>

    <p>
        那么大、中、小屏幕如何区分呢？Pure通过媒体查询进行判断，默认列表如下：
    </p>

    <div class="table-responsive">
        {{> grids/mq-table}}
    </div>

    <aside>
        <p>
            如果你想自定义这些媒体查询断点，<a href="{{pathTo 'start'}}#build-your-pure-starter-kit">请点这里</a>。
        </p>
    </aside>

    <h3>相对长度单位</h3>

    <p>
        同志们都看到了，我们用{{code "em"}}作为媒体查询的宽度单位，而不是{{code "px"}}。这是考虑到媒体查询能适应网页的缩放，<a href="http://bradfrostweb.com/blog/post/7-habits-of-highly-effective-media-queries/#relative">不懂的请看这</a>。
    </p>

    <p>
        如果你不想用{{code "em"}}，你可以<a href="{{pathTo 'start'}}#build-your-pure-starter-kit">在这修改</a>。{{code "em"}} 转 {{code "px"}} :
    </p>

    {{#code "generic"}}
    1em == 16px *
    {{/code}}

    <p>
        <small>
            * {{code "em"}} 转 {{code "px"}} 是基于浏览器的默认字体大小，一般是{{code "16px"}}，但是也可能在浏览器设置里被修改了。
        </small>
    </p>

    <h3>响应式栅格的实例</h3>

    <p>
        我们创建一个包含4个单元格的栅格。每个单元格在小屏幕上宽{{code "width: 100%"}}，中屏幕{{code "width: 50%"}}，大屏幕{{code "width: 25%"}}。
    </p>

    <p>
        对应小屏幕的class是{{code ".pure-u-1"}}，中屏幕{{code ".pure-u-md-1-2"}}，大屏幕 {{code ".pure-u-lg-1-4"}}。<em>缩放浏览器可以看到效果。</em>
    </p>
</div>

<div class="grids-example">
    {{> grids/four-col}}
</div>

<div class="content">
    {{sectionHeading "移动端栅格"}}

    <p>
        Pure的栅格系统默认移动端优先。想要在移动端使用栅格系统，加class {{code "pure-u-*"}} 在相应的元素上就可以了。
    </p>
</div>

<div class="grids-example">
    {{> grids/mobile-col}}
</div>

<div class="content">
    {{sectionHeading "响应式图片"}}

    <p>
        使用响应式栅格时，你肯定也希望图片能够伸缩，以保持正确的比例。给图片加个class {{code ".pure-img"}} 就搞定了。缩放浏览器看下面的例子。
    </p>
</div>

<div class="grids-example">
    {{> grids/images}}
</div>

<div class="content">
    {{sectionHeading "设置单元格的padding和border"}}

    <p>
        两种可以设置，第一是用 {{code "<div>"}} 把单元格包起来，对{{code "<div>"}}进行设置：
    </p>

  {{#code}}
    {{> grids/padding-nested}}
  {{/code}}

    <p>
        第二种方法是直接设置单元格，但可能破坏布局，需要为单元格添加如下样式来避免：
    </p>

  {{#code}}
    {{> grids/padding-box-sizing}}
  {{/code}}

    <p>
        用 {{code "box-sizing: border-box"}} 可以保持代码简洁，但是有两个缺点。第一，老的浏览器不支持{{code "box-sizing"}}，第二，这么写修改了全部的单元格，以后很难覆盖或取消了。Pure默认设置{{code "box-sizing"}} 为{{code "content-box"}}，要怎么改自己选。
    </p>


    {{sectionHeading "设置栅格的Font-Family"
                  id="using-grids-with-custom-fonts" }}

    <p>
        Pure栅格使用特定的字体栈来最大限度兼容苹果os的浏览器。单元格默认 {{code "font-family: sans-serif;"}}这是Pure的核心(Normalize.css)设置的。另外这些元素也被设置了：{{code "<html>"}}, {{code "<button>"}}, {{code "<input>"}}, {{code "<select>"}}, 和 {{code "<textarea>"}} 。 要修改也很简单，请看：
    </p>

  {{#code}}
    {{> grids/custom-font}}
  {{/code}}


    {{sectionHeading "如何只用栅格模块？"}}

    <p>
        {{code "<head>"}}里直接引用{{code "<link>"}}就可以了。大陆用户建议下载文件到本地使用。
    </p>

  {{#code}}
<!--[if lte IE 8]>
  <link rel="stylesheet" href="http://yui.yahooapis.com/combo?pure/{{pure.version}}/base-min.css&pure/{{pure.version}}/grids-min.css&pure/{{pure.version}}/grids-responsive-old-ie-min.css">
<![endif]-->
<!--[if gt IE 8]><!-->
  <link rel="stylesheet" href="http://yui.yahooapis.com/combo?pure/{{pure.version}}/base-min.css&pure/{{pure.version}}/grids-min.css&pure/{{pure.version}}/grids-responsive-min.css">
<!--<![endif]-->
  {{/code}}

    <aside>
        <p>
            也可以<a href="/start/#build-your-pure-starter-kit">自定义</a>。
        </p>
    </aside>
</div>
